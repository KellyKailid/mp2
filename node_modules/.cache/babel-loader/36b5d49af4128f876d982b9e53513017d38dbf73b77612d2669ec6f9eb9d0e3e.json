{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'https://pokeapi.co/api/v2';\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000\n});\nexport const pokemonApi = {\n  // Get list of all Pokemon\n  getAllPokemon: async (limit = 151) => {\n    const response = await api.get(`/pokemon?limit=${limit}`);\n    return response.data;\n  },\n  // Get Pokemon by ID or name\n  getPokemonById: async id => {\n    const response = await api.get(`/pokemon/${id}`);\n    return response.data;\n  },\n  // Get Pokemon types\n  getPokemonTypes: async () => {\n    const response = await api.get('/type');\n    return response.data;\n  },\n  // Get Pokemon by type\n  getPokemonByType: async type => {\n    const response = await api.get(`/type/${type}`);\n    return {\n      count: response.data.pokemon.length,\n      next: null,\n      previous: null,\n      results: response.data.pokemon.map(p => ({\n        name: p.pokemon.name,\n        url: p.pokemon.url\n      }))\n    };\n  },\n  // Search Pokemon by name\n  searchPokemon: async query => {\n    try {\n      const pokemon = await pokemonApi.getPokemonById(query.toLowerCase());\n      return [pokemon];\n    } catch (error) {\n      return [];\n    }\n  }\n};\n\n// Error handling interceptor\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  throw error;\n});","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","timeout","pokemonApi","getAllPokemon","limit","response","get","data","getPokemonById","id","getPokemonTypes","getPokemonByType","type","count","pokemon","length","next","previous","results","map","p","name","url","searchPokemon","query","toLowerCase","error","interceptors","use","console"],"sources":["/Users/daijingyu/Desktop/mp2/src/services/pokemonApi.ts"],"sourcesContent":["import axios from 'axios';\nimport { Pokemon, PokemonListResponse, PokemonTypesResponse } from '../types/Pokemon';\n\nconst BASE_URL = 'https://pokeapi.co/api/v2';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n});\n\nexport const pokemonApi = {\n  // Get list of all Pokemon\n  getAllPokemon: async (limit: number = 151): Promise<PokemonListResponse> => {\n    const response = await api.get(`/pokemon?limit=${limit}`);\n    return response.data;\n  },\n\n  // Get Pokemon by ID or name\n  getPokemonById: async (id: string | number): Promise<Pokemon> => {\n    const response = await api.get(`/pokemon/${id}`);\n    return response.data;\n  },\n\n  // Get Pokemon types\n  getPokemonTypes: async (): Promise<PokemonTypesResponse> => {\n    const response = await api.get('/type');\n    return response.data;\n  },\n\n  // Get Pokemon by type\n  getPokemonByType: async (type: string): Promise<PokemonListResponse> => {\n    const response = await api.get(`/type/${type}`);\n    return {\n      count: response.data.pokemon.length,\n      next: null,\n      previous: null,\n      results: response.data.pokemon.map((p: any) => ({\n        name: p.pokemon.name,\n        url: p.pokemon.url,\n      })),\n    };\n  },\n\n  // Search Pokemon by name\n  searchPokemon: async (query: string): Promise<Pokemon[]> => {\n    try {\n      const pokemon = await pokemonApi.getPokemonById(query.toLowerCase());\n      return [pokemon];\n    } catch (error) {\n      return [];\n    }\n  },\n};\n\n// Error handling interceptor\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    throw error;\n  }\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,aAAa,EAAE,MAAAA,CAAOC,KAAa,GAAG,GAAG,KAAmC;IAC1E,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,kBAAkBF,KAAK,EAAE,CAAC;IACzD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,cAAc,EAAE,MAAOC,EAAmB,IAAuB;IAC/D,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,YAAYG,EAAE,EAAE,CAAC;IAChD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,eAAe,EAAE,MAAAA,CAAA,KAA2C;IAC1D,MAAML,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAI,gBAAgB,EAAE,MAAOC,IAAY,IAAmC;IACtE,MAAMP,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,SAASM,IAAI,EAAE,CAAC;IAC/C,OAAO;MACLC,KAAK,EAAER,QAAQ,CAACE,IAAI,CAACO,OAAO,CAACC,MAAM;MACnCC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEb,QAAQ,CAACE,IAAI,CAACO,OAAO,CAACK,GAAG,CAAEC,CAAM,KAAM;QAC9CC,IAAI,EAAED,CAAC,CAACN,OAAO,CAACO,IAAI;QACpBC,GAAG,EAAEF,CAAC,CAACN,OAAO,CAACQ;MACjB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;EAED;EACAC,aAAa,EAAE,MAAOC,KAAa,IAAyB;IAC1D,IAAI;MACF,MAAMV,OAAO,GAAG,MAAMZ,UAAU,CAACM,cAAc,CAACgB,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC;MACpE,OAAO,CAACX,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,OAAO,EAAE;IACX;EACF;AACF,CAAC;;AAED;AACA5B,GAAG,CAAC6B,YAAY,CAACtB,QAAQ,CAACuB,GAAG,CAC1BvB,QAAQ,IAAKA,QAAQ,EACrBqB,KAAK,IAAK;EACTG,OAAO,CAACH,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,MAAMA,KAAK;AACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}